@startuml Component
!include  https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!define ICON https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!includeurl ICON/devicons2/nestjs.puml
!includeurl ICON/devicons2/mongodb.puml

title [Component] APEL

SHOW_PERSON_PORTRAIT()

AddRelTag("dashed", $lineStyle = DashedLine())

Person(user, "Aplicação Web")

System_Ext(email, "Serviço de email", "Sistema de envio de emails")
System_Ext(brasil_api, "Brasil API", "Verificação de CNPJ")

ContainerDb(db, "Banco de Dados", "Mongodb", "Armazena os produtos, empresas e usuários", $sprite = "mongodb")

Container_Boundary(system, "API") {
    Component(login_controller, "LoginController", "Controller", "Permite usuários autenticarem-se no sistema")
    Component(user_controller, "UsersController", "Controller", "Permite a visualização, edição e criação de usuários")
    Component(product_controller, "ProductsController", "Controller", "Permite a visualização, edição e criação de produtos")
    Component(company_controller, "CompaniesController", "Controller", "Permite a visualização, edição e criação de empresas")

    Component(login_service, "LoginService", "Service", "Fornece a autenticação de usuários")
    Component(user_service, "UsersService", "Service", "Fornece a funcionalidade de gerenciamento de usuários")
    Component(product_service, "ProductsService", "Service", "Fornece a funcionalidade de gerenciamento de produtos")
    Component(company_service, "CompaniesService", "Service", "Fornece a funcionalidade de gerenciamento de empresas")

    Component(notification_service, "NotificationsService", "Service", "Notifica usuários através do email e da aplicação web")

    Rel(company_service, brasil_api, "Verifica CNPJ usando", "JSON/HTTPS", $tags = "dashed")

    Rel(login_controller, login_service, "Usa", $tags = "dashed")
    Rel(user_controller, user_service, "Usa", $tags = "dashed")
    Rel(product_controller, product_service, "Usa", $tags = "dashed")
    Rel(company_controller, company_service, "Usa", $tags = "dashed")
    Rel(login_service, user_service, "Usa", $tags = "dashed")

    Rel(login_service, db, "Lê e grava em", "Mongodb protocol", $tags = "dashed")
    Rel(user_service, db, "Lê e grava em", "Mongodb protocol", $tags = "dashed")
    Rel(product_service, db, "Lê e grava em", "Mongodb protocol", $tags = "dashed")
    Rel(company_service, db, "Lê e grava em", "Mongodb protocol", $tags = "dashed")
    Rel(notification_service, email, "Envia email para", "JSON/HTTPS", $tags = "dashed")
}

Rel(user, login_controller, "Realiza chamadas API para", "JSON/HTTPS")
Rel(user, user_controller, "Realiza chamadas API para", "Websocket")
Rel(user, product_controller, "Realiza chamadas API para", "Websocket")
Rel(user, company_controller, "Realiza chamadas API para", "Websocket")


' Rel(user, api, "Solicita Login, cria demanda de produtos e empresas, visualiza profissionais usando", "Websocket")
' Rel(api, email, "Envia email usando", $tags = "dashed")
' Rel(api, brasil_api, "Verifica CNPJ usando", "JSON/HTTPS", $tags = "dashed")

@enduml